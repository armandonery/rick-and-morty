{"version":3,"sources":["img/wall2.jpg","img/react.svg","img/material-ui.svg","img/css.svg","logo.svg","components/CharCard.js","components/CharacterData.js","components/EpiCard.js","components/EpisodeData.js","components/HomePage.js","components/Information.js","components/SocialFooter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","root","maxWidth","media","height","CharCard","char","classes","className","Card","CardActionArea","CardMedia","image","CardContent","Typography","gutterBottom","variant","component","name","color","status","species","gender","Charlist","useState","chars","setChars","useEffect","axios","get","then","res","console","log","data","results","catch","err","window","alert","message","map","key","id","EpiCard","epi","episode","air_date","Epilist","epis","setEpis","HomePage","src","wall2","alt","class","react","material","css","width","Info","href","display","SocialFooter","App","logo","to","exact","path","Home","Character","Episode","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.0269b0c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wall2.59075df5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/react.9a28da9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/material-ui.ba99aecd.svg\";","module.exports = __webpack_public_path__ + \"static/media/css.b1b631b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.7562dd86.svg\";","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 250,\r\n  },\r\n});\r\n\r\nexport default function CharCard ({ char }) {   {/* getting data from char param */}\r\n\r\nconst classes = useStyles();\r\n\r\nreturn (\r\n    \r\n    <div className=\"Card\">\r\n      \r\n      <br />\r\n      <br />\r\n\r\n      <Card className={classes.root}>\r\n        <CardActionArea>\r\n          <CardMedia \r\n            className={classes.media}\r\n            image={char.image}\r\n          />        \r\n          <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {char.name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            I'm {char.status} <br />\r\n            I'm {char.species} <br />\r\n            My gender is {char.gender} <br />\r\n          </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n\r\n      <br />\r\n      <br />\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport CharCard from './CharCard'\r\n\r\nexport default function Charlist () {   {/* function that returns characters */}\r\n  const [chars, setChars] = useState([])\r\n\r\n  {/* retrieving data from rick and morty's api */}\r\n  useEffect(() => {   {/* calling rick and morty api with useEffect hook */}\r\n    axios\r\n      .get('https://rickandmortyapi.com/api/character/')    \r\n      .then(res => {\r\n        console.log(res)\r\n        setChars(res.data.results)\r\n      })\r\n      .catch(err => {\r\n        window.alert(err.message)\r\n      })\r\n  }, [])\r\n\r\n  console.log('Characters:', chars)\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div>\r\n        {/* gets data from CharCard component */}\r\n        {chars.map(char => {\r\n          return <CharCard key={char.id} char={char} /> \r\n        })}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n});\r\n\r\nexport default function EpiCard ({ epi }) {   {/* getting data from epi param */}\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"Card\">\r\n      <br />\r\n\r\n      <Card className={classes.root}>\r\n        <CardActionArea>     \r\n          <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            <strong>Episode:</strong> {epi.episode} <br />\r\n            <strong>Name:</strong> {epi.name} <br />\r\n            <strong>Date:</strong> {epi.air_date} <br />\r\n          </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n\r\n      <br />\r\n      <br />\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport EpiCard from './EpiCard'\r\n\r\nexport default function Epilist () {    {/* function that returns episodes */}\r\n  const [epis, setEpis] = useState([])\r\n\r\n  {/* retrieving api's data */}\r\n  useEffect(() => {\r\n    axios\r\n      .get('https://rickandmortyapi.com/api/episode')\r\n      .then(res => {\r\n        console.log(res)\r\n        setEpis(res.data.results)\r\n      })\r\n      .catch(err => {\r\n        window.alert(err.message)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div>\r\n        {/* gets data from EpiCard component */}\r\n        {epis.map(epi => {\r\n          return <EpiCard key={epi.id} epi={epi} />\r\n        })}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React from 'react'\r\nimport '../App.css'     //importing styles\r\nimport wall2 from '../img/wall2.jpg'\r\nimport react from '../img/react.svg'\r\nimport material from '../img/material-ui.svg'\r\nimport css from '../img/css.svg'\r\n\r\nexport default function HomePage(){     {/* function that returns homepage component */}\r\n    return(\r\n        <div>\r\n\r\n            <section>\r\n                <div>\r\n                    <p id=\"text\">       {/* Main text of the homepage */}\r\n                        Rick and Morty's fan site <br />                        \r\n                        Where you can find main charachter and episodes.\r\n                    </p>\r\n                    <img id=\"hp2\" src={wall2} alt=\"rick\" />\r\n                </div>\r\n            </section>\r\n\r\n            <footer class=\"footer\">     {/* footer of the homepage */}\r\n                <div>\r\n                    <p>\r\n                        <strong>Created by</strong> Armando Nery. <br />\r\n                        <p>using</p>\r\n                        <ul id=\"lista2\">        {/* list that returns logos contained in the img folder of the project */}\r\n                            <li><img id=\"tech\" src={react} alt=\"react\"/></li>\r\n                            <li><img id=\"tech\" src={material} alt=\"material-ui\"/></li>\r\n                            <li><img id=\"tech\" src={css} alt=\"css3\"/></li>\r\n                        </ul>\r\n                    </p>\r\n                </div>\r\n            </footer>\r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 500,\r\n  },\r\n});\r\n\r\nexport default function Info() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root} id=\"info\">\r\n        \r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Current state v1.0.0\r\n      </Typography>\r\n      <Typography variant=\"body1\" gutterBottom>\r\n        - I've created this little PWA ( Progressive Web Application ) that retrieves data from <a id=\"api\" href={'https://rickandmortyapi.com/'}>https://rickandmortyapi.com/ </a>\r\n         which main purpose is to show main characters and episodes of the tv show Rick and Morty.\r\n      </Typography>\r\n      <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n        using this technologies:\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n          <ul>\r\n              <ol><em>1. CREATE-REACT-APP</em></ol>\r\n              <ol><em>2. RICK AND MORTY'S API</em></ol>\r\n              <ol><em>3. MATERIAL-UI</em></ol>\r\n              <ol><em>4. K.I.S.S PATTERN</em></ol>\r\n              <ol><em>5. COMPONENTS</em></ol>\r\n              <ol><em>6. REACT ROUTER</em></ol>\r\n              <ol><em>7. REACT DEV TOOLS</em></ol>\r\n          </ul>\r\n\r\n      </Typography>\r\n      <br />\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Next update v1.0.1\r\n      </Typography>\r\n\r\n      <br />\r\n\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        upcoming features\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n          <ul>\r\n            <ol>\r\n              <em>1. STANDARD JS</em></ol>\r\n            <ol><em>2. REDUX</em></ol>\r\n          </ul>\r\n      </Typography>\r\n      <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n        notes:\r\n      </Typography>\r\n      <Typography variant=\"body1\" gutterBottom>\r\n        - In the next update I'll include Standard JS  module, that'll allow me to enforce code quality and automatically\r\n         format all the code as well as catch style issues & programmer errors early; the reason I didn't implement it in \r\n         this version was because it threw me a bunch of errors, that I didn't know how to fix them, so firstly I'll learn\r\n          to use Standard JS before using it.\r\n      </Typography>\r\n      <br />\r\n      <Typography variant=\"body1\" gutterBottom>\r\n        - Also I had planned adding Redux to my app, but I didn't want to implement something that I dind't know perfectly\r\n        because that could modify the current state and performance of my app, so I am completely decided learning Redux throughout\r\n         my development experience and finally implement Redux in further React JS proyects.\r\n      </Typography>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport default function SocialFooter(){\r\n    return(\r\n        <div className=\"SocialFooter\">\r\n\r\n            <footer id=\"socialfooter\">     {/* footer of the homepage */}\r\n                <div>\r\n                    <ul id=\"lista2\">\r\n                        <p>You can find me in</p> \r\n                        <li>\r\n                            <a id=\"tech\" href={'https://www.linkedin.com/in/armandonery34/'}>\r\n                                <img src=\"https://img.icons8.com/color/48/000000/linkedin.png\"/>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a id=\"tech\" href={'https://github.com/armandonery'}>\r\n                                <img src=\"https://img.icons8.com/ios-glyphs/30/000000/github.png\"/>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </footer>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\nimport './App.css'\nimport CharacterData from './components/CharacterData'\nimport EpisodeData from './components/EpisodeData'\nimport HomePage from './components/HomePage'\nimport Information from './components/Information'\nimport SocialFooter from './components/SocialFooter'\nimport logo from './logo.svg'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom'\n\nexport default function App () {\n  return (\n\n    <Router>    \n\n      <div>\n        <ul id=\"lista\">\n          <li>\n            <img id=\"hp\"src={logo} alt=\"logo\"/>\n          </li>\n          <li>\n            <Link id=\"link\" to='/'>Home</Link>   \n          </li>\n          <li>\n            <Link id=\"link\" to='/character'>Characters</Link> \n          </li>\n          <li>\n            <Link id=\"link\" to='/episode'>Episodes</Link> \n          </li>\n          <li>\n            <Link id=\"link\" to='/info'>Information</Link>\n          </li>\n        </ul>\n\n        <br />\n        <br />\n\n        <Switch>\n          <Route exact path='/'> \n            <Home /> \n          </Route>\n          <Route path='/character'> \n            <Character />\n          </Route>\n          <Route path='/episode'> \n            <Episode />\n          </Route>\n          <Route path='/info'>\n            <Info />\n          </Route>\n        </Switch>\n\n      </div>\n    </Router>\n\n  )\n}\n\nfunction Episode () {   \n  return (\n    <div>\n      <h3>20 Main episodes</h3>\n      <hr />\n      <EpisodeData />\n    </div>\n  )\n}\n\nfunction Character () {   \n  return (\n    <div>\n      <h3>20 Main characters</h3>\n      <hr />\n      <CharacterData />\n    </div>\n  )\n}\n\nfunction Home(){    \n  return (\n    <div>\n      <HomePage />\n    </div>\n  )\n}\n\nfunction Info(){\n  return(\n    <div>\n      <Information />\n      <SocialFooter />\n    </div>\n  )\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n)\r\n\r\nexport function register (config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister()\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister()\n"],"sourceRoot":""}